{"version":3,"file":"named-exports.min.js","sources":["../../src/extras/named-exports.js"],"sourcesContent":["/*\n * Named exports support for legacy module formats in SystemJS 2.0\n */\n(function (global) {\n  const systemJSPrototype = global.System.constructor.prototype;\n  \n  // hook System.register to know the last declaration binding\n  let lastRegisterDeclare;\n  const systemRegister = systemJSPrototype.register;\n  systemJSPrototype.register = function (name, deps, declare) {\n    lastRegisterDeclare = typeof name === 'string' ? declare : deps;\n    systemRegister.apply(this, arguments);\n  };\n\n  const getRegister = systemJSPrototype.getRegister;\n  systemJSPrototype.getRegister = function () {\n    const register = getRegister.call(this);\n    // if it is an actual System.register call, then its ESM\n    // -> dont add named exports\n    if (!register || register[1] === lastRegisterDeclare || register[1].length === 0)\n      return register;\n    \n    // otherwise it was provided by a custom instantiator\n    // -> extend the registration with named exports support\n    const registerDeclare = register[1];\n    register[1] = function (_export, _context) {\n      // hook the _export function to note the default export\n      let defaultExport, hasDefaultExport = false;\n      const declaration = registerDeclare.call(this, function (name, value) {\n        if (typeof name === 'object' && name.__useDefault)\n          defaultExport = name.default, hasDefaultExport = true;\n        else if (name === 'default')\n          defaultExport = value;\n        else if (name === '__useDefault')\n          hasDefaultExport = true;\n        _export(name, value);\n      }, _context);\n      // hook the execute function\n      const execute = declaration.execute;\n      if (execute)\n        declaration.execute = function () {\n          execute.call(this);\n          // do a bulk export of the default export object\n          // to export all its names as named exports\n          if (hasDefaultExport && typeof defaultExport === 'object')\n            for (let name in defaultExport) {\n              // default is not a named export\n              if (name !== 'default') {\n                _export(name, defaultExport[name]);\n              }\n            }\n        };\n      return declaration;\n    };\n    return register;\n  };\n})(typeof self !== 'undefined' ? self : global);\n"],"names":[],"mappings":"yBAAA;;;AAGA,CAAC,UAAU,MAAM,EAAE;EACjB,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;;;EAG9D,IAAI,mBAAmB,CAAC;EACxB,MAAM,cAAc,GAAG,iBAAiB,CAAC,QAAQ,CAAC;EAClD,iBAAiB,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;IAC1D,mBAAmB,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC;IAChE,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;GACvC,CAAC;;EAEF,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;EAClD,iBAAiB,CAAC,WAAW,GAAG,YAAY;IAC1C,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;IAGxC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,mBAAmB,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC;MAC9E,OAAO,QAAQ,CAAC;;;;IAIlB,MAAM,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,QAAQ,CAAC,CAAC,CAAC,GAAG,UAAU,OAAO,EAAE,QAAQ,EAAE;;MAEzC,IAAI,aAAa,EAAE,gBAAgB,GAAG,KAAK,CAAC;MAC5C,MAAM,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE;QACpE,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,YAAY;UAC/C,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE,gBAAgB,GAAG,IAAI,CAAC;aACnD,IAAI,IAAI,KAAK,SAAS;UACzB,aAAa,GAAG,KAAK,CAAC;aACnB,IAAI,IAAI,KAAK,cAAc;UAC9B,gBAAgB,GAAG,IAAI,CAAC;QAC1B,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;OACtB,EAAE,QAAQ,CAAC,CAAC;;MAEb,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;MACpC,IAAI,OAAO;QACT,WAAW,CAAC,OAAO,GAAG,YAAY;UAChC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;UAGnB,IAAI,gBAAgB,IAAI,OAAO,aAAa,KAAK,QAAQ;YACvD,KAAK,IAAI,IAAI,IAAI,aAAa,EAAE;;cAE9B,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,OAAO,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;eACpC;aACF;SACJ,CAAC;MACJ,OAAO,WAAW,CAAC;KACpB,CAAC;IACF,OAAO,QAAQ,CAAC;GACjB,CAAC;CACH,EAAE,OAAO,IAAI,KAAK,WAAW,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC"}